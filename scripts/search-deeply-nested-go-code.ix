manifest {
    permissions: {
        read: %/...
    }
}

pattern line = {
    number: int
    string: str
    leading-space-count: int
}

# Search Go files containg lines with a lot of leading space.
var files []{bad_lines: []line, path: path} = []

walk ./ entry {
    # Ignore non-Go files and test files.
    if (entry.path.extension != ".go" or tostr(entry.path).has_suffix("_test.go")) {
        continue
    }

    # Read file.
    content = fs.read!(entry.path, --raw)
    assert (content match bytes)

    lines = split!(tostr(content), "\n")

    var bad_lines []line = []

    # Search for bad lines.
    for index, line in lines {
        # If the line has a lot of leading space we add it to the bad lines.
        if (line match %`^([ ]{4}|\t){8,}`) {
            leading_space = find!(%`^\s+`, line)[0]
            bad_lines.append({
                string: line
                number: (index + 1)
                leading-space-count: len(leading_space)
            })
        } 
    }

    if (len(bad_lines) > 0) {
        files.append({
            bad_lines: bad_lines,
            path: entry.path
        })
    }
}


files.sort_by(.bad_lines.len, #desc)

# Print the bad lines from the top 10 files with the most bad lines (up to 10 files).
for file in files[:10] {
    for bad_line in file.bad_lines {
        print(concat tostr(file.path) ":" tostr(bad_line.number) ":")
    }
}